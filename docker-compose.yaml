networks:
  iternal:
    name: iternal
  exposed:
    name: exposed
services:
  jvm:
    build: ./jvm
    volumes:
      - ./jvm/dist:/opt/application
      - ./jvm/home:/home
    networks:
      - iternal
      - exposed
    depends_on:
      - maria
      - postgres
#    Here u can set RAM and CPU limits for the container
#    deploy:
#      resources:
#        limits:
#          cpus: '1.5'
#          memory: 7168M #7GB
    restart: always
    entrypoint: /bin/bash /home/startup.sh
  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/home:/home
    networks:
      - exposed
    depends_on:
      - jvm
    entrypoint: /bin/bash /home/startup.sh
  maria:
    build: ./mariadb
    volumes:
      - ./mariadb/home:/home
      - ./mariadb/start_dump:/docker-entrypoint-initdb.d
    networks:
      - iternal
#    Here u can set RAM and CPU limits for the container
#    deploy:
#      resources:
#        limits:
#          cpus: '1.5'
#          memory: 7168M #7GB
  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus/
      - ./prometheus/home:/home
    networks:
      - iternal
  grafana:
    image: grafana/grafana:latest
#    You can exposed ports if you need or proxy it through nginx
#    ports:
#      - 3000:XXXX
    volumes:
      - ./grafana/data:/var/lib/grafana
    networks:
      - iternal
    depends_on:
      - prometheus
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: my-secret-pw
    volumes:
      - ./postgres/home:/home
      - ./postgres/root:/root
    networks:
      - iternal
#    Here u can set RAM and CPU limits for the container
#    deploy:
#      resources:
#        limits:
#          cpus: '1.5'
#          memory: 7168M #7G